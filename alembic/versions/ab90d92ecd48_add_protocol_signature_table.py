"""Add protocol signature table

Revision ID: ab90d92ecd48
Revises: d67559900536
Create Date: 2025-06-20 10:51:27.413096

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ab90d92ecd48'
down_revision: Union[str, Sequence[str], None] = 'd67559900536'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cve_update_logs')
    op.drop_table('cve_records')
    op.alter_column('validator_scan_reports', 'report_email_body',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('validator_scan_reports', 'report_email_body',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.create_table('cve_records',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('cve_id', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('published_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('source', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=2000), autoincrement=False, nullable=True),
    sa.Column('severity', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('cvss_score', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('cvss_vector', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('affected_products', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('raw_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('cve_records_pkey')),
    sa.UniqueConstraint('cve_id', name=op.f('cve_records_cve_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('uuid', name=op.f('uq_cve_records_uuid'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('cve_update_logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('update_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('total_cves_processed', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('new_cves_added', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('updated_cves', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('source', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('error_message', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('processing_time_seconds', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('cve_update_logs_pkey')),
    sa.UniqueConstraint('uuid', name=op.f('uq_cve_update_logs_uuid'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
