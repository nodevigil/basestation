services:
  postgres:
    image: postgres:15-alpine
    container_name: depin-postgres
    environment:
      POSTGRES_DB: depin
      POSTGRES_USER: simon
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U simon -d depin"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: depin-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery-worker:
    build: .
    container_name: depin-celery-worker
    depends_on:
      - redis
      - postgres
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - USE_DOCKER_CONFIG=true
      - DATABASE_URL=postgresql://simon:password@postgres:5432/depin
    command: python worker.py
    volumes:
      - .:/app
    restart: unless-stopped

  celery-flower:
    build: .
    container_name: depin-celery-flower
    depends_on:
      - redis
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: celery -A celery_app flower --address=0.0.0.0 --port=5555
    volumes:
      - .:/app
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:
